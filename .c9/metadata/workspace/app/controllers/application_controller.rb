{"changed":false,"filter":false,"title":"application_controller.rb","tooltip":"/app/controllers/application_controller.rb","value":"class ApplicationController < ActionController::Base\n  # Prevent CSRF attacks by raising an exception.\n  # For APIs, you may want to use :null_session instead.\n  protect_from_forgery with: :exception\n  include ApplicationHelper\n\n  def send_emails\n    # Things to do: \n    #   1. Match ke results lao\n    #   2. Saare requesters ko offers \n    results = match();\n    \n       \n      str = \"Hi! Matches found for your ride request:\\n\";\n      \n      results.each do |key, val|\n\n      # the people who matched with the requester\n      matchArray = results[key];\n      # go back if no matches\n      if (matchArray.count == 0) then \n        return; \n      end\n\n      str += \"We found #{matchArray.count} match(es) for you!\\n\\n\";\n\n      matchArray.each do |offer| \n        str += \"[\"+offer.username + \"] requested $#{offer.moneyRequested} to drive to #{offer.destination} from #{offer.origin} \\n Comments:\" + offer.comments + \"\\n\";\n      end\n      \n      str += \"\\n\\n\";\n      \n      \n      #puts Time.now\n      #puts key\n      send_the_email(key+\"@grinnell.edu\", \"New Ride Notification\", str);\n      \n      # Reset the string object\n      str = \"\"\n      \n      #\n      # stuff to do-\n      #clean out the matches, \n    end\n    \n  end\n  \n  def match\n    @requests = RideRequest.all\n    @offers = RideOffer.all\n    \n    matchMap = Hash.new();\n    @requests.each { |req|\n      # Get matches\n      matches = Array.new();\n      \n      @offers.each { |offer| \n        if (does_match(req, offer)) then \n          matches.push(offer)\n        end\n      }\n      \n      # Put\n      matchMap.store(req.username,matches)\n    }\n    \n    return matchMap\n  end\n  \n  def does_match(req, offer)\n    # Check\n    if (req.origin != offer.origin || req.destination != offer.destination) then \n      return false; \n    end\n    \n    puts req.rideDate.class\n    \n    # Check again\n    req_date = (req.rideDate);\n    off_date = (offer.rideDate);\n    \n    gap = (req_date - off_date).to_i.abs;\n    if (gap > 2) then\n      return false\n    else\n      return true;\n    end\n  end\n  \nend\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":7,"column":20},"end":{"row":7,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1550432524308}